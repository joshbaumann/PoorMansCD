name: Build and Release
on:
  push:
    branches:
      - master

jobs:
  build_images:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: ["app1", "app2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Compile App
        run: |
          npm run build ${{ matrix.app }}
          npx ncc build dist/apps/${{ matrix.app }}/main.js

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: barrymcj/poormanscd:${{ matrix.app }}

  deploy:
    runs-on: ubuntu-latest

    needs: [build_images]

    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run deployment
        run: |
          npm install
          npm run deploy
        env:
          DO_API_KEY: ${{ secrets.DO_API_KEY }}
          DO_SSH_KEY: ${{ secrets.DO_SSH_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
